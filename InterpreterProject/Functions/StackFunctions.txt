function StackInit(length)
{
    stack = dim[length]
    return(stack)
}

function StackIsFull(&s, &t)
{
    stacksize = len(s)
    if (t >= stacksize)
    {
        return(1)
    }

    return(0)
}

function StackIsEmpty(&s,&t)
{
    if (t==0)
    {
        return(1)
    }

    return(0)
}

function StackPush(&s, &t, item)
{
    result = StackIsFull(s,t)
    if (result == 1)
    {
        return(0)
    }

    s[t] = item
    t = t + 1
    return(1)
}

function StackPop(&s, &t)
{
    result = StackIsEmpty(s,t)
    if (result == 1)
    {
        return(0,-1)
    }

    t = t - 1
    item = s[t]
    return(1,item)
}

function StackDump(&s, &t)
{
    result = StackIsEmpty(s,t)
    if (result == 1)
    {
        print("STACK EMPTY!!!", endl)
        return()
    }

    for (i=0, i<t, i=i+1)
    {
        print(i, ".  ", s[i], endl)
    }
    stacksize = len(s)
    print("STACK ITEM COUNT:  ", t, endl)
    print("STACK SIZE:        ", stacksize, endl)
}

if (main==1)
{
    stack = StackInit(10)
    top = 0
    StackDump(stack,top)
    r = StackPush(stack,top,5)
    r = StackPush(stack,top,7)
    r = StackPush(stack,top,11)
    r = StackPush(stack,top,13)
    r = StackPush(stack,top,17)
    r = StackPush(stack,top,19)
    r = StackPush(stack,top,23)
    StackDump(stack,top)
    {r,myitem} = StackPop(stack,top)
    StackDump(stack,top)
    print("TOP:   ", top)
    print("ITEM:  ", myitem)
}


